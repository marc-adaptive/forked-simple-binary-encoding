name: Release

on:
  workflow_dispatch:
    inputs:
      run-ci:
        description: Run ci and test workflows
        required: true
        type: boolean
      release:
        description: Is release? (Will update master version.txt)
        required: true
        default: false
        type: boolean
      release-version:
        description: Released version (x.y.z)
        required: true
        type: string
      next-version:
        description: Next version (x.y.z)
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.java.installations.auto-detect=false -Dorg.gradle.warning.mode=fail'

jobs:
  run-release-ci:
    name: Run ci workflows
    uses: ./.github/workflows/pre-release-ci.yml
    with:
      run-ci: ${{ inputs.run-ci }}
      codeql: ${{ inputs.run-ci }}

  pre-release:
    name: Update version, tag repo, and return sha
    needs: run-release-ci
    uses: ./.github/workflows/pre-release.yml
    with:
      release: ${{ inputs.release }}
      version: ${{ inputs.release-version }}

  release:
    name: Release java artifacts
    permissions:
      contents: write
      packages: write
    needs: pre-release
    runs-on: self-hosted
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.pre-release.outputs.sha }}
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 8
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
        run: |
          java -Xinternalversion
          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV
      - name: Publish with Gradle
        run: ./gradlew publish
        env:
          ORG_GRADLE_PROJECT_ossrhUsername: ${{ secrets.ossrhUsername }}
          ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.ossrhPassword }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.signingKey }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.signingPassword }}

  post-release:
    name: Update version
    needs: release
    uses: ./.github/workflows/post-release.yml
    with:
      release: ${{ inputs.release }}
      version: ${{ inputs.next-version }}